bot.chat.serverUrl=http://localhost:8065
bot.chat.login=ava@ava.foo
bot.chat.password=AvaAva123!

client.openai.secret-key=Bearer ${CLIENT_OPENAI_SECRET_KEY:weeeeee}
client.openai.models=code-davinci-002,code-cushman-001
client.openai.temperature=low (not much creative)
#use moderation classifier scores + flagged (true != policy)
#dv : maxreq 8000tokens, cm (faster, RT) : 2048 tokens

#https://beta.openai.com/docs/guides/production-best-practices/example-procedure-for-evaluating-a-gpt-3-based-system

client.huggingfaces.key=foo

#mmost quarkus.naming.enable-jndi=true

quarkus.log.category."fr.ava".level=DEBUG
quarkus.log.category."net.bis5.mattermost".level=DEBUG
#quarkus.log.category."org.glassfish.jersey".level=DEBUG

quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=1024
quarkus.log.category."org.apache.http.wire".level=DEBUG

#TODO don't use the reactive client
quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG
#quarkus.rest-client.user-agent=foo

# configure your datasource
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = postgres
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/avadb
# drop and create the database at startup (use `update` to only update the schema)
#quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.database.generation = update
